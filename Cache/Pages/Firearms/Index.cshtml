@page "{currentpage=1}/{sortby=DateAcquired}"
@model Cache.Pages.Firearms.IndexModel

@{
    ViewData["Title"] = "Firearms";
}

<div class="row align-items-center">
    <div class="col">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="col text-right">
        <a class="btn btn-primary" asp-page="Create">&plus; Add</a>
    </div>
</div>

<div class="row">
    <div class="col">
        <table class="table table-hover table-responsive-sm">
            <thead>
                <tr>
                    <th>
                        <a asp-page="Index" class="sort-link" asp-route-sortby="ManufacturerImporter">
                        @Html.DisplayNameFor(model => model.Firearms[0].ManufacturerImporter)
                        </a>
                    </th>
                    <th>
                        <a asp-page="Index" class="sort-link" asp-route-sortby="Model">
                        @Html.DisplayNameFor(model => model.Firearms[0].Model)
                        </a>
                    </th>
                    <th>
                        <a asp-page="Index" class="sort-link" asp-route-sortby="Type">
                        @Html.DisplayNameFor(model => model.Firearms[0].Type)
                        </a>
                    </th>
                    <th>
                        <a asp-page="Index" class="sort-link" asp-route-sortby="CaliberGauge">
                        @Html.DisplayNameFor(model => model.Firearms[0].CaliberGauge)
                        </a>
                    </th>
                    <th>
                        <a asp-page="Index" class="sort-link" asp-route-sortby="Status">
                        @Html.DisplayNameFor(model => model.Firearms[0].Status)
                        </a>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model.Firearms) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ManufacturerImporter)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Model)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CaliberGauge.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
        }
            </tbody>
        </table>
    </div>
</div>

@{
    var prevDisabled = !Model.Firearms.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Firearms.HasNextPage ? "disabled" : "";
}

<nav aria-label="Firearm pagination">
  <ul class="pagination justify-content-center">
    <li class="page-item @prevDisabled">
        <a asp-page="./Index"
            asp-all-route-data="@(new Dictionary<string, string>{{ "currentpage", (Model.Firearms.PageIndex - 1).ToString() },{ "sortby", Model.SortBy }})"
            class="page-link">
            Previous
        </a>
    </li>
    <li class="page-item @nextDisabled">
        <a asp-page="./Index"
            asp-all-route-data="@(new Dictionary<string, string>{{ "currentpage", (Model.Firearms.PageIndex + 1).ToString() },{ "sortby", Model.SortBy }})"
            class="page-link">
            Next
        </a>
    </li>
  </ul>
</nav>